2019-10-06 11:58:49,359 [INFO] from akka.event.slf4j.Slf4jLogger in application-akka.actor.default-dispatcher-5 - Slf4jLogger started
2019-10-06 11:58:49,360 [DEBUG] from akka.event.EventStream in application-akka.actor.default-dispatcher-5 - logger log1-Slf4jLogger started
2019-10-06 11:58:49,361 [DEBUG] from akka.event.EventStream in application-akka.actor.default-dispatcher-5 - Default Loggers started
2019-10-06 11:58:49,536 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - Driver class org.h2.Driver found in Thread context class loader ReloadableClassLoader(v1){file:/Users/ldipotet/envio/borrar/server-side-test-master/target/scala-2.12/classes/}
2019-10-06 11:58:49,550 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - db - configuration:
2019-10-06 11:58:49,552 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - allowPoolSuspension.............false
2019-10-06 11:58:49,552 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - autoCommit......................true
2019-10-06 11:58:49,552 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - catalog.........................none
2019-10-06 11:58:49,552 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - connectionInitSql...............none
2019-10-06 11:58:49,552 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - connectionTestQuery.............none
2019-10-06 11:58:49,552 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - connectionTimeout...............30000
2019-10-06 11:58:49,552 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - dataSource......................none
2019-10-06 11:58:49,552 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - dataSourceClassName.............none
2019-10-06 11:58:49,552 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - dataSourceJNDI..................none
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - dataSourceProperties............{password=<masked>}
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - driverClassName................."org.h2.Driver"
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - healthCheckProperties...........{}
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - healthCheckRegistry.............none
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - idleTimeout.....................600000
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - initializationFailTimeout.......-1
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - isolateInternalQueries..........false
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - jdbcUrl.........................jdbc:h2:mem:play;DB_CLOSE_DELAY=-1
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - leakDetectionThreshold..........0
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - maxLifetime.....................1800000
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - maximumPoolSize.................20
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - metricRegistry..................none
2019-10-06 11:58:49,553 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - metricsTrackerFactory...........none
2019-10-06 11:58:49,554 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - minimumIdle.....................20
2019-10-06 11:58:49,554 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - password........................<masked>
2019-10-06 11:58:49,554 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - poolName........................"db"
2019-10-06 11:58:49,554 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - readOnly........................false
2019-10-06 11:58:49,554 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - registerMbeans..................false
2019-10-06 11:58:49,554 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - scheduledExecutor...............none
2019-10-06 11:58:49,554 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - schema..........................none
2019-10-06 11:58:49,554 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - threadFactory...................internal
2019-10-06 11:58:49,554 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - transactionIsolation............default
2019-10-06 11:58:49,554 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - username........................none
2019-10-06 11:58:49,554 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-4 - validationTimeout...............5000
2019-10-06 11:58:49,557 [INFO] from com.zaxxer.hikari.HikariDataSource in play-dev-mode-akka.actor.default-dispatcher-4 - db - Starting...
2019-10-06 11:58:49,570 [INFO] from com.zaxxer.hikari.HikariDataSource in play-dev-mode-akka.actor.default-dispatcher-4 - db - Start completed.
2019-10-06 11:58:49,674 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=0, active=0, idle=0, waiting=1)
2019-10-06 11:58:49,750 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn0: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,750 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn1: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,751 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn2: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,751 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn3: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,751 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn4: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,752 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn5: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,752 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn6: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,752 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn7: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,752 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn8: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,753 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn9: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,753 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn10: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,753 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn11: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,754 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn12: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,754 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn13: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,755 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn14: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,755 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn15: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,756 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn16: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,756 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn17: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,756 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn18: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,756 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn19: url=jdbc:h2:mem:play user=
2019-10-06 11:58:49,882 [INFO] from play.api.http.EnabledFilters in play-dev-mode-akka.actor.default-dispatcher-4 - Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):


2019-10-06 11:58:49,890 [INFO] from play.api.Play in play-dev-mode-akka.actor.default-dispatcher-4 - Application started (Dev) (no global state)
2019-10-06 11:58:50,431 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-2 - Source:
| TableExpansion
|   table s2: Table IMPRESSION
|   columns: TypeMapping
|     0: ProductNode
|       1: OptionApply
|         0: Path s2.ID : Int'
|       2: Path s2.PLACEMENT : String'
|       3: Path s2.BIDDER : String'
|       4: OptionApply
|         0: Path s2.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:58:50,446 [DEBUG] from slick.compiler.AssignUniqueSymbols in application-akka.actor.default-dispatcher-2 - Detected features: UsedFeatures(false,true,false,true)
2019-10-06 11:58:50,448 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-2 - After phase assignUniqueSymbols:
| TableExpansion
|   table s3: Table IMPRESSION
|   columns: TypeMapping
|     0: ProductNode
|       1: OptionApply
|         0: Path s3.ID : Int'
|       2: Path s3.PLACEMENT : String'
|       3: Path s3.BIDDER : String'
|       4: OptionApply
|         0: Path s3.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:58:50,455 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-2 - After phase inferTypes: (no change)
2019-10-06 11:58:50,465 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-2 - After phase insertCompiler:
| ResultSetMapping : Vector[(Int', String', String', java.time.LocalDateTime')]
|   from s5: Insert allFields=[ID, PLACEMENT, BIDDER, TIMEVAL] : (Int', String', String', java.time.LocalDateTime')
|     table s6: Table IMPRESSION : Vector[@t4<UnassignedType>]
|     linear: ProductNode : (Int', String', String', java.time.LocalDateTime')
|       1: Path s6.ID : Int'
|       2: Path s6.PLACEMENT : String'
|       3: Path s6.BIDDER : String'
|       4: Path s6.TIMEVAL : java.time.LocalDateTime'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: InsertColumn ID : Int'
|           0: Path s5._1 : Int'
|       2: InsertColumn PLACEMENT : String'
|         0: Path s5._2 : String'
|       3: InsertColumn BIDDER : String'
|         0: Path s5._3 : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: InsertColumn TIMEVAL : java.time.LocalDateTime'
|           0: Path s5._4 : java.time.LocalDateTime'

2019-10-06 11:58:50,468 [DEBUG] from slick.compiler.CodeGen in application-akka.actor.default-dispatcher-2 - Compiling server-side and mapping with server-side:
| Insert allFields=[ID, PLACEMENT, BIDDER, TIMEVAL] : (Int', String', String', java.time.LocalDateTime')
|   table s6: Table IMPRESSION : Vector[@t4<UnassignedType>]
|   linear: ProductNode : (Int', String', String', java.time.LocalDateTime')
|     1: Path s6.ID : Int'
|     2: Path s6.PLACEMENT : String'
|     3: Path s6.BIDDER : String'
|     4: Path s6.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:58:50,495 [DEBUG] from slick.relational.ResultConverterCompiler in application-akka.actor.default-dispatcher-2 - Compiled ResultConverter
| TypeMappingResultConverter
|   child: ProductResultConverter
|     1: OptionResultConverter$mcI$sp idx=1 : Int'
|     2: SpecializedJdbcResultConverter$$anon$1 idx=2, name=PLACEMENT : String'
|     3: SpecializedJdbcResultConverter$$anon$1 idx=3, name=BIDDER : String'
|     4: SpecializedJdbcResultConverter$$anon$2 idx=4 : java.time.LocalDateTime'

2019-10-06 11:58:50,496 [DEBUG] from slick.compiler.CodeGen in application-akka.actor.default-dispatcher-2 - Compiled server-side to:
| CompiledStatement "merge into "IMPRESSION" ("ID","PLACEMENT","BIDDER","TIMEVAL")  values (?,?,?,?)" : (Int', String', String', java.time.LocalDateTime')

2019-10-06 11:58:50,498 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-2 - After phase codeGen:
| ResultSetMapping : Vector[(Int', String', String', java.time.LocalDateTime')]
|   from s5: CompiledStatement "merge into "IMPRESSION" ("ID","PLACEMENT","BIDDER","TIMEVAL")  values (?,?,?,?)" : (Int', String', String', java.time.LocalDateTime')
|   map: CompiledMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     converter: TypeMappingResultConverter
|       child: ProductResultConverter
|         1: OptionResultConverter$mcI$sp idx=1 : Int'
|         2: SpecializedJdbcResultConverter$$anon$1 idx=2, name=PLACEMENT : String'
|         3: SpecializedJdbcResultConverter$$anon$1 idx=3, name=BIDDER : String'
|         4: SpecializedJdbcResultConverter$$anon$2 idx=4 : java.time.LocalDateTime'

2019-10-06 11:58:50,499 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-2 - ------------------- Phase: Time ---------
2019-10-06 11:58:50,502 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-2 -       assignUniqueSymbols:   16,736061 ms
2019-10-06 11:58:50,502 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-2 -                inferTypes:    6,225866 ms
2019-10-06 11:58:50,503 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-2 -            insertCompiler:    9,899024 ms
2019-10-06 11:58:50,503 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-2 -                   codeGen:   33,704449 ms
2019-10-06 11:58:50,503 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-2 -                     TOTAL:   66,565400 ms
2019-10-06 11:58:50,512 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-2 - Source:
| TableExpansion
|   table s2: Table IMPRESSION
|   columns: TypeMapping
|     0: ProductNode
|       1: OptionApply
|         0: Path s2.ID : Int'
|       2: Path s2.PLACEMENT : String'
|       3: Path s2.BIDDER : String'
|       4: OptionApply
|         0: Path s2.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:58:50,512 [DEBUG] from slick.compiler.AssignUniqueSymbols in application-akka.actor.default-dispatcher-2 - Detected features: UsedFeatures(false,true,false,true)
2019-10-06 11:58:50,513 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-2 - After phase assignUniqueSymbols:
| TableExpansion
|   table s3: Table IMPRESSION
|   columns: TypeMapping
|     0: ProductNode
|       1: OptionApply
|         0: Path s3.ID : Int'
|       2: Path s3.PLACEMENT : String'
|       3: Path s3.BIDDER : String'
|       4: OptionApply
|         0: Path s3.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:58:50,514 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-2 - After phase inferTypes: (no change)
2019-10-06 11:58:50,516 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-2 - After phase insertCompiler:
| ResultSetMapping : Vector[(String', String', java.time.LocalDateTime')]
|   from s5: Insert allFields=[ID, PLACEMENT, BIDDER, TIMEVAL] : (String', String', java.time.LocalDateTime')
|     table s6: Table IMPRESSION : Vector[@t4<UnassignedType>]
|     linear: ProductNode : (String', String', java.time.LocalDateTime')
|       1: Path s6.PLACEMENT : String'
|       2: Path s6.BIDDER : String'
|       3: Path s6.TIMEVAL : java.time.LocalDateTime'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: InsertColumn ID : Int'
|       2: InsertColumn PLACEMENT : String'
|         0: Path s5._1 : String'
|       3: InsertColumn BIDDER : String'
|         0: Path s5._2 : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: InsertColumn TIMEVAL : java.time.LocalDateTime'
|           0: Path s5._3 : java.time.LocalDateTime'

2019-10-06 11:58:50,517 [DEBUG] from slick.compiler.CodeGen in application-akka.actor.default-dispatcher-2 - Compiling server-side and mapping with server-side:
| Insert allFields=[ID, PLACEMENT, BIDDER, TIMEVAL] : (String', String', java.time.LocalDateTime')
|   table s6: Table IMPRESSION : Vector[@t4<UnassignedType>]
|   linear: ProductNode : (String', String', java.time.LocalDateTime')
|     1: Path s6.PLACEMENT : String'
|     2: Path s6.BIDDER : String'
|     3: Path s6.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:58:50,519 [DEBUG] from slick.relational.ResultConverterCompiler in application-akka.actor.default-dispatcher-2 - Compiled ResultConverter
| TypeMappingResultConverter
|   child: ProductResultConverter
|     1: CompoundResultConverter
|     2: SpecializedJdbcResultConverter$$anon$1 idx=1, name=PLACEMENT : String'
|     3: SpecializedJdbcResultConverter$$anon$1 idx=2, name=BIDDER : String'
|     4: SpecializedJdbcResultConverter$$anon$2 idx=3 : java.time.LocalDateTime'

2019-10-06 11:58:50,519 [DEBUG] from slick.compiler.CodeGen in application-akka.actor.default-dispatcher-2 - Compiled server-side to:
| CompiledStatement "insert into "IMPRESSION" ("PLACEMENT","BIDDER","TIMEVAL")  values (?,?,?)" : (String', String', java.time.LocalDateTime')

2019-10-06 11:58:50,520 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-2 - After phase codeGen:
| ResultSetMapping : Vector[(String', String', java.time.LocalDateTime')]
|   from s5: CompiledStatement "insert into "IMPRESSION" ("PLACEMENT","BIDDER","TIMEVAL")  values (?,?,?)" : (String', String', java.time.LocalDateTime')
|   map: CompiledMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     converter: TypeMappingResultConverter
|       child: ProductResultConverter
|         1: CompoundResultConverter
|         2: SpecializedJdbcResultConverter$$anon$1 idx=1, name=PLACEMENT : String'
|         3: SpecializedJdbcResultConverter$$anon$1 idx=2, name=BIDDER : String'
|         4: SpecializedJdbcResultConverter$$anon$2 idx=3 : java.time.LocalDateTime'

2019-10-06 11:58:50,520 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-2 - ------------------- Phase: Time ---------
2019-10-06 11:58:50,521 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-2 -       assignUniqueSymbols:    1,162949 ms
2019-10-06 11:58:50,521 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-2 -                inferTypes:    0,163143 ms
2019-10-06 11:58:50,521 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-2 -            insertCompiler:    2,586655 ms
2019-10-06 11:58:50,521 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-2 -                   codeGen:    4,185151 ms
2019-10-06 11:58:50,521 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-2 -                     TOTAL:    8,097898 ms
2019-10-06 11:58:50,523 [DEBUG] from slick.basic.BasicBackend.action in application-akka.actor.default-dispatcher-2 - #1: SingleInsertAction [insert into "IMPRESSION" ("PLACEMENT","BIDDER","TIMEVAL")  values (?,?,?)]
2019-10-06 11:58:50,539 [DEBUG] from slick.compiler.QueryCompiler in db-1 - Source:
| Bind
|   from s2: TableExpansion
|     table s3: Table IMPRESSION
|     columns: TypeMapping
|       0: ProductNode
|         1: OptionApply
|           0: Path s3.ID : Int'
|         2: Path s3.PLACEMENT : String'
|         3: Path s3.BIDDER : String'
|         4: OptionApply
|           0: Path s3.TIMEVAL : java.time.LocalDateTime'
|   select: Pure t4
|     value: Path s2.ID : Int'

2019-10-06 11:58:50,539 [DEBUG] from slick.compiler.AssignUniqueSymbols in db-1 - Detected features: UsedFeatures(false,true,false,true)
2019-10-06 11:58:50,540 [DEBUG] from slick.compiler.QueryCompiler in db-1 - After phase assignUniqueSymbols:
| Bind
|   from s5: TableExpansion
|     table s6: Table IMPRESSION
|     columns: TypeMapping
|       0: ProductNode
|         1: OptionApply
|           0: Path s6.ID : Int'
|         2: Path s6.PLACEMENT : String'
|         3: Path s6.BIDDER : String'
|         4: OptionApply
|           0: Path s6.TIMEVAL : java.time.LocalDateTime'
|   select: Pure t8
|     value: Path s5.ID : Int'

2019-10-06 11:58:50,541 [DEBUG] from slick.compiler.QueryCompiler in db-1 - After phase inferTypes: (no change)
2019-10-06 11:58:50,545 [DEBUG] from slick.compiler.QueryCompiler in db-1 - After phase insertCompiler:
| ResultSetMapping : Vector[(Int')]
|   from s9: Insert allFields=[ID] : (Int')
|     table s10: Table IMPRESSION : Vector[@t7<UnassignedType>]
|     linear: ProductNode : (Int')
|       1: Path s10.ID : Int'
|   map: InsertColumn ID : Int'
|     0: Path s9._1 : Int'

2019-10-06 11:58:50,545 [DEBUG] from slick.compiler.CodeGen in db-1 - Compiling server-side and mapping with server-side:
| Insert allFields=[ID] : (Int')
|   table s10: Table IMPRESSION : Vector[@t7<UnassignedType>]
|   linear: ProductNode : (Int')
|     1: Path s10.ID : Int'

2019-10-06 11:58:50,546 [DEBUG] from slick.relational.ResultConverterCompiler in db-1 - Compiled ResultConverter
| BaseResultConverter$mcI$sp idx=1, name=ID : Int'

2019-10-06 11:58:50,546 [DEBUG] from slick.compiler.CodeGen in db-1 - Compiled server-side to:
| CompiledStatement "insert into "IMPRESSION" ("ID")  values (?)" : (Int')

2019-10-06 11:58:50,546 [DEBUG] from slick.compiler.QueryCompiler in db-1 - After phase codeGen:
| ResultSetMapping : Vector[(Int')]
|   from s9: CompiledStatement "insert into "IMPRESSION" ("ID")  values (?)" : (Int')
|   map: CompiledMapping : Int'
|     converter: BaseResultConverter$mcI$sp idx=1, name=ID : Int'

2019-10-06 11:58:50,546 [DEBUG] from slick.compiler.QueryCompilerBenchmark in db-1 - ------------------- Phase: Time ---------
2019-10-06 11:58:50,547 [DEBUG] from slick.compiler.QueryCompilerBenchmark in db-1 -       assignUniqueSymbols:    1,398140 ms
2019-10-06 11:58:50,547 [DEBUG] from slick.compiler.QueryCompilerBenchmark in db-1 -                inferTypes:    0,185042 ms
2019-10-06 11:58:50,547 [DEBUG] from slick.compiler.QueryCompilerBenchmark in db-1 -            insertCompiler:    4,371602 ms
2019-10-06 11:58:50,547 [DEBUG] from slick.compiler.QueryCompilerBenchmark in db-1 -                   codeGen:    1,353667 ms
2019-10-06 11:58:50,547 [DEBUG] from slick.compiler.QueryCompilerBenchmark in db-1 -                     TOTAL:    7,308451 ms
2019-10-06 11:58:50,550 [DEBUG] from slick.jdbc.JdbcBackend.statement in db-1 - Preparing insert statement (returning: ID): insert into "IMPRESSION" ("PLACEMENT","BIDDER","TIMEVAL")  values (?,?,?)
2019-10-06 11:58:50,554 [DEBUG] from slick.jdbc.JdbcBackend.statement in db-1 - Executing prepared update: HikariProxyPreparedStatement@1970365546 wrapping prep2: insert into "IMPRESSION" ("PLACEMENT","BIDDER","TIMEVAL")  values (?,?,?) {1: 'ABC123', 2: 'appnexus', 3: NULL}
2019-10-06 11:58:50,555 [DEBUG] from slick.jdbc.JdbcBackend.statementAndParameter in db-1 - Executing prepared update: HikariProxyPreparedStatement@1970365546 wrapping prep2: insert into "IMPRESSION" ("PLACEMENT","BIDDER","TIMEVAL")  values (?,?,?) {1: 'ABC123', 2: 'appnexus', 3: NULL}
2019-10-06 11:58:50,568 [DEBUG] from slick.jdbc.JdbcBackend.parameter in db-1 - /--------+----------+-----------\
2019-10-06 11:58:50,568 [DEBUG] from slick.jdbc.JdbcBackend.parameter in db-1 - | 1      | 2        | 3         |
2019-10-06 11:58:50,568 [DEBUG] from slick.jdbc.JdbcBackend.parameter in db-1 - | String | String   | TIMESTAMP |
2019-10-06 11:58:50,568 [DEBUG] from slick.jdbc.JdbcBackend.parameter in db-1 - |--------+----------+-----------|
2019-10-06 11:58:50,568 [DEBUG] from slick.jdbc.JdbcBackend.parameter in db-1 - | ABC123 | appnexus | NULL      |
2019-10-06 11:58:50,568 [DEBUG] from slick.jdbc.JdbcBackend.parameter in db-1 - \--------+----------+-----------/
2019-10-06 11:58:50,570 [DEBUG] from slick.jdbc.JdbcBackend.benchmark in db-1 - Execution of prepared update took 2ms
2019-10-06 11:59:19,678 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 11:59:23,169 [DEBUG] from akka.io.TcpListener in play-dev-mode-akka.actor.default-dispatcher-2 - New connection accepted
2019-10-06 11:59:23,294 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-3 - Performing phase [before-service-unbind] with [0] tasks
2019-10-06 11:59:23,294 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-4 - Performing phase [service-unbind] with [0] tasks
2019-10-06 11:59:23,294 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-4 - Performing phase [service-requests-done] with [0] tasks
2019-10-06 11:59:23,295 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-4 - Performing phase [service-stop] with [1] tasks: [application-lifecycle-stophook]
2019-10-06 11:59:23,304 [INFO] from com.zaxxer.hikari.HikariDataSource in application-akka.actor.default-dispatcher-3 - db - Shutdown initiated...
2019-10-06 11:59:23,304 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in application-akka.actor.default-dispatcher-3 - db - Before shutdown stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 11:59:23,305 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn0: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,306 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn1: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,306 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn2: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,306 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn3: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,306 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn4: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,307 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn5: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,307 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn6: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,307 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn7: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,307 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn8: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,309 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn9: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,309 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn10: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,309 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn11: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,309 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn12: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,310 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn13: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,310 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn14: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,310 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn15: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,310 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn16: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,311 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn17: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,311 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn18: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,311 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn19: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 11:59:23,314 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in application-akka.actor.default-dispatcher-3 - db - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2019-10-06 11:59:23,315 [INFO] from com.zaxxer.hikari.HikariDataSource in application-akka.actor.default-dispatcher-3 - db - Shutdown completed.
2019-10-06 11:59:23,315 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-4 - Performing phase [before-cluster-shutdown] with [0] tasks
2019-10-06 11:59:23,315 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-4 - Performing phase [cluster-sharding-shutdown-region] with [0] tasks
2019-10-06 11:59:23,315 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-4 - Performing phase [cluster-leave] with [0] tasks
2019-10-06 11:59:23,316 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-4 - Performing phase [cluster-exiting] with [0] tasks
2019-10-06 11:59:23,316 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-4 - Performing phase [cluster-exiting-done] with [0] tasks
2019-10-06 11:59:23,316 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-4 - Performing phase [cluster-shutdown] with [0] tasks
2019-10-06 11:59:23,316 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-4 - Performing phase [before-actor-system-terminate] with [1] tasks: [force-reload]
2019-10-06 11:59:23,316 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-4 - Performing phase [actor-system-terminate] with [1] tasks: [terminate-system]
2019-10-06 11:59:23,319 [DEBUG] from akka.event.EventStream in application-akka.actor.default-dispatcher-3 - shutting down: StandardOutLogger
2019-10-06 11:59:23,467 [INFO] from akka.event.slf4j.Slf4jLogger in application-akka.actor.default-dispatcher-2 - Slf4jLogger started
2019-10-06 11:59:23,467 [DEBUG] from akka.event.EventStream in application-akka.actor.default-dispatcher-2 - logger log1-Slf4jLogger started
2019-10-06 11:59:23,468 [DEBUG] from akka.event.EventStream in application-akka.actor.default-dispatcher-2 - Default Loggers started
2019-10-06 11:59:23,485 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - Driver class org.h2.Driver found in Thread context class loader ReloadableClassLoader(v2){file:/Users/ldipotet/envio/borrar/server-side-test-master/target/scala-2.12/classes/}
2019-10-06 11:59:23,485 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - db - configuration:
2019-10-06 11:59:23,485 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - allowPoolSuspension.............false
2019-10-06 11:59:23,485 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - autoCommit......................true
2019-10-06 11:59:23,485 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - catalog.........................none
2019-10-06 11:59:23,485 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - connectionInitSql...............none
2019-10-06 11:59:23,485 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - connectionTestQuery.............none
2019-10-06 11:59:23,485 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - connectionTimeout...............30000
2019-10-06 11:59:23,485 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - dataSource......................none
2019-10-06 11:59:23,485 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - dataSourceClassName.............none
2019-10-06 11:59:23,485 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - dataSourceJNDI..................none
2019-10-06 11:59:23,485 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - dataSourceProperties............{password=<masked>}
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - driverClassName................."org.h2.Driver"
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - healthCheckProperties...........{}
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - healthCheckRegistry.............none
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - idleTimeout.....................600000
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - initializationFailTimeout.......-1
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - isolateInternalQueries..........false
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - jdbcUrl.........................jdbc:h2:mem:play;DB_CLOSE_DELAY=-1
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - leakDetectionThreshold..........0
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - maxLifetime.....................1800000
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - maximumPoolSize.................20
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - metricRegistry..................none
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - metricsTrackerFactory...........none
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - minimumIdle.....................20
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - password........................<masked>
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - poolName........................"db"
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - readOnly........................false
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - registerMbeans..................false
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - scheduledExecutor...............none
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - schema..........................none
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - threadFactory...................internal
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - transactionIsolation............default
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - username........................none
2019-10-06 11:59:23,486 [DEBUG] from com.zaxxer.hikari.HikariConfig in play-dev-mode-akka.actor.default-dispatcher-6 - validationTimeout...............5000
2019-10-06 11:59:23,486 [INFO] from com.zaxxer.hikari.HikariDataSource in play-dev-mode-akka.actor.default-dispatcher-6 - db - Starting...
2019-10-06 11:59:23,487 [INFO] from com.zaxxer.hikari.HikariDataSource in play-dev-mode-akka.actor.default-dispatcher-6 - db - Start completed.
2019-10-06 11:59:23,488 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn20: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,489 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn21: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,506 [INFO] from play.api.http.EnabledFilters in play-dev-mode-akka.actor.default-dispatcher-6 - Enabled Filters (see <https://www.playframework.com/documentation/latest/Filters>):


2019-10-06 11:59:23,507 [INFO] from play.api.Play in play-dev-mode-akka.actor.default-dispatcher-6 - Application started (Dev) (no global state)
2019-10-06 11:59:23,542 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - Source:
| Filter s2
|   from s2: TableExpansion
|     table s3: Table IMPRESSION
|     columns: TypeMapping
|       0: ProductNode
|         1: OptionApply
|           0: Path s3.ID : Int'
|         2: Path s3.PLACEMENT : String'
|         3: Path s3.BIDDER : String'
|         4: OptionApply
|           0: Path s3.TIMEVAL : java.time.LocalDateTime'
|   where: Apply Function =
|     0: Path s2.ID : Int'
|     1: LiteralNode 8 (volatileHint=false)

2019-10-06 11:59:23,543 [DEBUG] from slick.compiler.AssignUniqueSymbols in application-akka.actor.default-dispatcher-4 - Detected features: UsedFeatures(false,true,false,true)
2019-10-06 11:59:23,545 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase assignUniqueSymbols:
| Filter s4
|   from s4: TableExpansion
|     table s5: Table IMPRESSION
|     columns: TypeMapping
|       0: ProductNode
|         1: OptionApply
|           0: Path s5.ID : Int'
|         2: Path s5.PLACEMENT : String'
|         3: Path s5.BIDDER : String'
|         4: OptionApply
|           0: Path s5.TIMEVAL : java.time.LocalDateTime'
|   where: Apply Function =
|     0: Path s4.ID : Int'
|     1: LiteralNode 8 (volatileHint=false)

2019-10-06 11:59:23,546 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase unrollTailBinds: (no change)
2019-10-06 11:59:23,548 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase inferTypes: (no change)
2019-10-06 11:59:23,553 [DEBUG] from slick.compiler.ExpandTables in application-akka.actor.default-dispatcher-4 - Found Selects for NominalTypes: @(slick.jdbc.H2Profile$._.IMPRESSION)
2019-10-06 11:59:23,556 [DEBUG] from slick.compiler.ExpandTables in application-akka.actor.default-dispatcher-4 - With correct table types:
| Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   where: Apply Function = : Boolean
|     0: Path s4.ID : Int'
|     1: LiteralNode 8 (volatileHint=false) : Int'

2019-10-06 11:59:23,557 [DEBUG] from slick.compiler.ExpandTables in application-akka.actor.default-dispatcher-4 - Table expansions: @t6 -> (s5,TypeMapping)
2019-10-06 11:59:23,558 [DEBUG] from slick.compiler.ExpandTables in application-akka.actor.default-dispatcher-4 - Expanding tables in result type
2019-10-06 11:59:23,560 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase expandTables:
| Bind : Vector[t8<Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]>]
|   from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     where: Apply Function = : Boolean
|       0: Path s4.ID : Int'
|       1: LiteralNode 8 (volatileHint=false) : Int'
|   select: Pure t8 : Vector[t8<Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]>]
|     value: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|       0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|         1: OptionApply : Option[Int']
|           0: Path s7.ID : Int'
|         2: Path s7.PLACEMENT : String'
|         3: Path s7.BIDDER : String'
|         4: OptionApply : Option[java.time.LocalDateTime']
|           0: Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:59:23,564 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase forceOuterBinds:
| Bind : Vector[t8<Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]>]
|   from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     where: Apply Function = : Boolean
|       0: Path s4.ID : Int'
|       1: LiteralNode 8 (volatileHint=false) : Int'
|   select: Pure t8 : Vector[t8<Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]>]
|     value: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|       0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|         1: OptionApply : Option[Int']
|           0: Path s7.ID : Int'
|         2: Path s7.PLACEMENT : String'
|         3: Path s7.BIDDER : String'
|         4: OptionApply : Option[java.time.LocalDateTime']
|           0: Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:59:23,567 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase removeMappedTypes:
| Bind : Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>]
|   from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     where: Apply Function = : Boolean
|       0: Path s4.ID : Int'
|       1: LiteralNode 8 (volatileHint=false) : Int'
|   select: Pure t8 : Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>]
|     value: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s7.ID : Int'
|       2: Path s7.PLACEMENT : String'
|       3: Path s7.BIDDER : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:59:23,571 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>] -> Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
2019-10-06 11:59:23,572 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}> -> @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>
2019-10-06 11:59:23,572 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: Int' -> Int'
2019-10-06 11:59:23,572 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: Int' -> Int'
2019-10-06 11:59:23,572 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: Boolean -> Boolean
2019-10-06 11:59:23,572 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>] -> Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
2019-10-06 11:59:23,572 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}> -> @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>
2019-10-06 11:59:23,572 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: Int' -> Int'
2019-10-06 11:59:23,572 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: Option[Int'] -> Option[Int']
2019-10-06 11:59:23,572 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}> -> @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>
2019-10-06 11:59:23,572 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: String' -> String'
2019-10-06 11:59:23,572 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}> -> @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>
2019-10-06 11:59:23,572 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: String' -> String'
2019-10-06 11:59:23,573 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}> -> @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>
2019-10-06 11:59:23,573 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: java.time.LocalDateTime' -> java.time.LocalDateTime'
2019-10-06 11:59:23,573 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: Option[java.time.LocalDateTime'] -> Option[java.time.LocalDateTime']
2019-10-06 11:59:23,573 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: (Option[Int'], String', String', Option[java.time.LocalDateTime']) -> (Option[Int'], String', String', Option[java.time.LocalDateTime'])
2019-10-06 11:59:23,573 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>] -> Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>]
2019-10-06 11:59:23,573 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-4 - Translated type: Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>] -> Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>]
2019-10-06 11:59:23,573 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase expandSums: (no change)
2019-10-06 11:59:23,574 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase emulateOuterJoins: (no change)
2019-10-06 11:59:23,578 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase expandRecords:
| Bind : Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>]
|   from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     where: Apply Function = : Boolean
|       0: Path s4.ID : Int'
|       1: LiteralNode 8 (volatileHint=false) : Int'
|   select: Pure t8 : Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>]
|     value: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s7.ID : Int'
|       2: Path s7.PLACEMENT : String'
|       3: Path s7.BIDDER : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:59:23,583 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Analyzing s4.ID with symbols 
| Path s4.ID : Int'

2019-10-06 11:59:23,584 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Translated s4.ID to:
| Path s4.ID

2019-10-06 11:59:23,584 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Flattening projection t8
2019-10-06 11:59:23,585 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Analyzing s7.ID with symbols 
| Path s7.ID : Int'

2019-10-06 11:59:23,585 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Translated s7.ID to:
| Path s7.ID

2019-10-06 11:59:23,585 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Analyzing s7.PLACEMENT with symbols 
| Path s7.PLACEMENT : String'

2019-10-06 11:59:23,585 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Translated s7.PLACEMENT to:
| Path s7.PLACEMENT

2019-10-06 11:59:23,585 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Analyzing s7.BIDDER with symbols 
| Path s7.BIDDER : String'

2019-10-06 11:59:23,585 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Translated s7.BIDDER to:
| Path s7.BIDDER

2019-10-06 11:59:23,585 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Analyzing s7.TIMEVAL with symbols 
| Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:59:23,585 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Translated s7.TIMEVAL to:
| Path s7.TIMEVAL

2019-10-06 11:59:23,586 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Flattening node at Path 
| ProductNode
|   1: OptionApply
|     0: Path s7.ID
|   2: Path s7.PLACEMENT
|   3: Path s7.BIDDER
|   4: OptionApply
|     0: Path s7.TIMEVAL

2019-10-06 11:59:23,589 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Flattening node at Path _1
| OptionApply
|   0: Path s7.ID

2019-10-06 11:59:23,589 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=2, active=0, idle=2, waiting=0)
2019-10-06 11:59:23,589 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Adding definition: s9 -> OptionApply
2019-10-06 11:59:23,589 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Flattening node at Path _2
| Path s7.PLACEMENT

2019-10-06 11:59:23,589 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Adding definition: s10 -> Path s7.PLACEMENT
2019-10-06 11:59:23,589 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Flattening node at Path _3
| Path s7.BIDDER

2019-10-06 11:59:23,589 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn22: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,590 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Adding definition: s11 -> Path s7.BIDDER
2019-10-06 11:59:23,590 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn23: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,590 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Flattening node at Path _4
| OptionApply
|   0: Path s7.TIMEVAL

2019-10-06 11:59:23,590 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Adding definition: s12 -> OptionApply
2019-10-06 11:59:23,590 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn24: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,590 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn25: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,590 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn26: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,591 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn27: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,591 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn28: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,591 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn29: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,591 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn30: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,592 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn31: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,592 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Adding translation for t8: (Map(List(_2) -> s10, List(_1) -> s9, List(_3) -> s11, List(_4) -> s12), UnassignedType)
2019-10-06 11:59:23,592 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn32: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,592 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn33: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,592 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn34: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,593 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn35: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,593 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn36: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,593 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn37: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,593 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn38: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,593 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-4 - Flattened projection to
| Pure t8
|   value: StructNode
|     s9: OptionApply
|       0: Path s7.ID
|     s10: Path s7.PLACEMENT
|     s11: Path s7.BIDDER
|     s12: OptionApply
|       0: Path s7.TIMEVAL

2019-10-06 11:59:23,594 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - Added connection conn39: url=jdbc:h2:mem:play user=
2019-10-06 11:59:23,594 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db connection adder - db - After adding stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 11:59:23,596 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase flattenProjections:
| Bind : Vector[t8<{s9: Option[Int'], s10: String', s11: String', s12: Option[java.time.LocalDateTime']}>]
|   from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     where: Apply Function = : Boolean
|       0: Path s4.ID : Int'
|       1: LiteralNode 8 (volatileHint=false) : Int'
|   select: Pure t8 : Vector[t8<{s9: Option[Int'], s10: String', s11: String', s12: Option[java.time.LocalDateTime']}>]
|     value: StructNode : {s9: Option[Int'], s10: String', s11: String', s12: Option[java.time.LocalDateTime']}
|       s9: OptionApply : Option[Int']
|         0: Path s7.ID : Int'
|       s10: Path s7.PLACEMENT : String'
|       s11: Path s7.BIDDER : String'
|       s12: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:59:23,597 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase rewriteJoins: (no change)
2019-10-06 11:59:23,600 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase verifySymbols: (no change)
2019-10-06 11:59:23,601 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase relabelUnions: (no change)
2019-10-06 11:59:23,602 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase createAggregates: (no change)
2019-10-06 11:59:23,603 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase resolveZipJoins: (no change)
2019-10-06 11:59:23,605 [DEBUG] from slick.compiler.PruneProjections in application-akka.actor.default-dispatcher-4 - Unreferenced: t8; Field refs: (@t6,BIDDER), (@t6,TIMEVAL), (@t6,ID), (@t6,PLACEMENT)
2019-10-06 11:59:23,606 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase pruneProjections: (no change)
2019-10-06 11:59:23,607 [DEBUG] from slick.compiler.RewriteDistinct in application-akka.actor.default-dispatcher-4 - No DISTINCT used as determined by assignUniqueSymbols - skipping phase
2019-10-06 11:59:23,607 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase rewriteDistinct: (no change)
2019-10-06 11:59:23,608 [DEBUG] from slick.compiler.CreateResultSetMapping in application-akka.actor.default-dispatcher-4 - Creating mapping from t8<Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]>
2019-10-06 11:59:23,608 [DEBUG] from slick.compiler.CreateResultSetMapping in application-akka.actor.default-dispatcher-4 - Creating mapping from (Option[Int'], String', String', Option[java.time.LocalDateTime'])
2019-10-06 11:59:23,609 [DEBUG] from slick.compiler.CreateResultSetMapping in application-akka.actor.default-dispatcher-4 - Creating mapping from Option[Int']
2019-10-06 11:59:23,609 [DEBUG] from slick.compiler.CreateResultSetMapping in application-akka.actor.default-dispatcher-4 - Creating mapping from String'
2019-10-06 11:59:23,609 [DEBUG] from slick.compiler.CreateResultSetMapping in application-akka.actor.default-dispatcher-4 - Creating mapping from String'
2019-10-06 11:59:23,609 [DEBUG] from slick.compiler.CreateResultSetMapping in application-akka.actor.default-dispatcher-4 - Creating mapping from Option[java.time.LocalDateTime']
2019-10-06 11:59:23,611 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase createResultSetMapping:
| ResultSetMapping : Vector[Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]]
|   from s13: Bind : Vector[t8<{s9: Option[Int'], s10: String', s11: String', s12: Option[java.time.LocalDateTime']}>]
|     from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|       from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|       where: Apply Function = : Boolean
|         0: Path s4.ID : Int'
|         1: LiteralNode 8 (volatileHint=false) : Int'
|     select: Pure t8 : Vector[t8<{s9: Option[Int'], s10: String', s11: String', s12: Option[java.time.LocalDateTime']}>]
|       value: StructNode : {s9: Option[Int'], s10: String', s11: String', s12: Option[java.time.LocalDateTime']}
|         s9: OptionApply : Option[Int']
|           0: Path s7.ID : Int'
|         s10: Path s7.PLACEMENT : String'
|         s11: Path s7.BIDDER : String'
|         s12: OptionApply : Option[java.time.LocalDateTime']
|           0: Path s7.TIMEVAL : java.time.LocalDateTime'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: Path s13.s9 : Option[Int']
|       2: Path s13.s10 : String'
|       3: Path s13.s11 : String'
|       4: Path s13.s12 : Option[java.time.LocalDateTime']

2019-10-06 11:59:23,615 [DEBUG] from slick.compiler.HoistClientOps in application-akka.actor.default-dispatcher-4 - Hoisting operations from defs: s9, s12
2019-10-06 11:59:23,616 [DEBUG] from slick.compiler.HoistClientOps in application-akka.actor.default-dispatcher-4 - New defs: Map(0 -> (Path s7.ID,s14), 1 -> (Path s7.PLACEMENT,s15), 2 -> (Path s7.BIDDER,s16), 3 -> (Path s7.TIMEVAL,s17))
2019-10-06 11:59:23,621 [DEBUG] from slick.compiler.HoistClientOps in application-akka.actor.default-dispatcher-4 - New ResultSetMapping:
| ResultSetMapping : Vector[Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]]
|   from s13: Bind : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|     from s7: ...
|     select: Pure t18 : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|       value: StructNode : {s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}
|         s14: Path s7.ID : Int'
|         s15: Path s7.PLACEMENT : String'
|         s16: Path s7.BIDDER : String'
|         s17: Path s7.TIMEVAL : java.time.LocalDateTime'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s13.s14 : Int'
|       2: Path s13.s15 : String'
|       3: Path s13.s16 : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s13.s17 : java.time.LocalDateTime'

2019-10-06 11:59:23,622 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase hoistClientOps:
| ResultSetMapping : Vector[Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]]
|   from s13: Bind : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|     from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|       from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|       where: Apply Function = : Boolean
|         0: Path s4.ID : Int'
|         1: LiteralNode 8 (volatileHint=false) : Int'
|     select: Pure t18 : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|       value: StructNode : {s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}
|         s14: Path s7.ID : Int'
|         s15: Path s7.PLACEMENT : String'
|         s16: Path s7.BIDDER : String'
|         s17: Path s7.TIMEVAL : java.time.LocalDateTime'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s13.s14 : Int'
|       2: Path s13.s15 : String'
|       3: Path s13.s16 : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s13.s17 : java.time.LocalDateTime'

2019-10-06 11:59:23,624 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase reorderOperations: (no change)
2019-10-06 11:59:23,627 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-4 - Table fields: Map(@t6 -> Vector(ID, PLACEMENT, BIDDER, TIMEVAL))
2019-10-06 11:59:23,631 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-4 - Creating source from TableNode:
| Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]

2019-10-06 11:59:23,631 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-4 - Mappings are: ConstArray(((@t6,ID),List(ID)), ((@t6,PLACEMENT),List(PLACEMENT)), ((@t6,BIDDER),List(BIDDER)), ((@t6,TIMEVAL),List(TIMEVAL)))
2019-10-06 11:59:23,632 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-4 - Building new Comprehension from:
| Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]

2019-10-06 11:59:23,643 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-4 - Built new Comprehension:
| Comprehension s19, None, None, ConstArray(), None, None, None, None, false : Vector[t20<{s21: Int', s22: String', s23: String', s24: java.time.LocalDateTime'}>]
|   from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   select: Pure t20 : Vector[t20<{s21: Int', s22: String', s23: String', s24: java.time.LocalDateTime'}>]
|     value: StructNode : {s21: Int', s22: String', s23: String', s24: java.time.LocalDateTime'}
|       s21: Path s19.ID : Int'
|       s22: Path s19.PLACEMENT : String'
|       s23: Path s19.BIDDER : String'
|       s24: Path s19.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:59:23,644 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-4 - Replacements are: Map((@t6,ID) -> s21, (@t6,PLACEMENT) -> s22, (@t6,BIDDER) -> s23, (@t6,TIMEVAL) -> s24)
2019-10-06 11:59:23,645 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-4 - Merging Filter into Comprehension:
| Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   from s4: ...
|   where: Apply Function = : Boolean
|     0: Path s4.ID : Int'
|     1: LiteralNode 8 (volatileHint=false) : Int'

2019-10-06 11:59:23,647 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-4 - Merged Filter into Comprehension:
| Comprehension s19, Some(Apply Function =), None, ConstArray(), None, None, None, None, false : Vector[t20<{s21: Int', s22: String', s23: String', s24: java.time.LocalDateTime'}>]
|   from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   select: Pure t20 : Vector[t20<{s21: Int', s22: String', s23: String', s24: java.time.LocalDateTime'}>]
|     value: StructNode : {s21: Int', s22: String', s23: String', s24: java.time.LocalDateTime'}
|       s21: Path s19.ID : Int'
|       s22: Path s19.PLACEMENT : String'
|       s23: Path s19.BIDDER : String'
|       s24: Path s19.TIMEVAL : java.time.LocalDateTime'
|   where: Apply Function = : Boolean
|     0: Path s19.ID : Int'
|     1: LiteralNode 8 (volatileHint=false) : Int'

2019-10-06 11:59:23,649 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-4 - Merging Bind into Comprehension as 'select':
| Bind : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|   from s7: ...
|   select: Pure t18 : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|     value: StructNode : {s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}
|       s14: Path s7.ID : Int'
|       s15: Path s7.PLACEMENT : String'
|       s16: Path s7.BIDDER : String'
|       s17: Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 11:59:23,651 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-4 - Merged Bind into Comprehension as 'select':
| Comprehension s19, Some(Apply Function =), None, ConstArray(), None, None, None, None, false : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|   from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   select: Pure t18 : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|     value: StructNode : {s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}
|       s14: Path s19.ID : Int'
|       s15: Path s19.PLACEMENT : String'
|       s16: Path s19.BIDDER : String'
|       s17: Path s19.TIMEVAL : java.time.LocalDateTime'
|   where: Apply Function = : Boolean
|     0: Path s19.ID : Int'
|     1: LiteralNode 8 (volatileHint=false) : Int'

2019-10-06 11:59:23,652 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-4 - Replacements are: Map((t18,s14) -> s14, (t18,s15) -> s15, (t18,s16) -> s16, (t18,s17) -> s17)
2019-10-06 11:59:23,653 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-4 - Mappings are: ConstArray(((t18,s14),List(s14)), ((t18,s15),List(s15)), ((t18,s16),List(s16)), ((t18,s17),List(s17)))
2019-10-06 11:59:23,655 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase mergeToComprehensions:
| ResultSetMapping : Vector[Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]]
|   from s13: Comprehension s19, Some(Apply Function =), None, ConstArray(), None, None, None, None, false : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|     from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     select: Pure t18 : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|       value: StructNode : {s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}
|         s14: Path s19.ID : Int'
|         s15: Path s19.PLACEMENT : String'
|         s16: Path s19.BIDDER : String'
|         s17: Path s19.TIMEVAL : java.time.LocalDateTime'
|     where: Apply Function = : Boolean
|       0: Path s19.ID : Int'
|       1: LiteralNode 8 (volatileHint=false) : Int'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s13.s14 : Int'
|       2: Path s13.s15 : String'
|       3: Path s13.s16 : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s13.s17 : java.time.LocalDateTime'

2019-10-06 11:59:23,657 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase optimizeScalar: (no change)
2019-10-06 11:59:23,658 [DEBUG] from slick.compiler.RemoveFieldNames in application-akka.actor.default-dispatcher-4 - Required symbols: s14 -> 0, s15 -> 1, s16 -> 2, s17 -> 3
2019-10-06 11:59:23,666 [DEBUG] from slick.compiler.RemoveFieldNames in application-akka.actor.default-dispatcher-4 - Transformed RSM: 
| ResultSetMapping
|   from s13: Comprehension s19, Some(Apply Function =), None, ConstArray(), None, None, None, None, false : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|     from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     select: Pure t18 : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|       value: ProductNode : (Int', String', String', java.time.LocalDateTime')
|         1: Path s19.ID : Int'
|         2: Path s19.PLACEMENT : String'
|         3: Path s19.BIDDER : String'
|         4: Path s19.TIMEVAL : java.time.LocalDateTime'
|     where: Apply Function = : Boolean
|       0: Path s19.ID : Int'
|       1: LiteralNode 8 (volatileHint=false) : Int'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s13.s14 : Int'
|       2: Path s13.s15 : String'
|       3: Path s13.s16 : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s13.s17 : java.time.LocalDateTime'

2019-10-06 11:59:23,667 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase removeFieldNames:
| ResultSetMapping : Vector[Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]]
|   from s13: Comprehension s19, Some(Apply Function =), None, ConstArray(), None, None, None, None, false : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|     from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     select: Pure t18 : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|       value: ProductNode : (Int', String', String', java.time.LocalDateTime')
|         1: Path s19.ID : Int'
|         2: Path s19.PLACEMENT : String'
|         3: Path s19.BIDDER : String'
|         4: Path s19.TIMEVAL : java.time.LocalDateTime'
|     where: Apply Function = : Boolean
|       0: Path s19.ID : Int'
|       1: LiteralNode 8 (volatileHint=false) : Int'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s13._1 : Int'
|       2: Path s13._2 : String'
|       3: Path s13._3 : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s13._4 : java.time.LocalDateTime'

2019-10-06 11:59:23,668 [DEBUG] from slick.compiler.CodeGen in application-akka.actor.default-dispatcher-4 - Compiling server-side and mapping with server-side:
| Comprehension s19, Some(Apply Function =), None, ConstArray(), None, None, None, None, false : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|   from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   select: Pure t18 : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|     value: ProductNode : (Int', String', String', java.time.LocalDateTime')
|       1: Path s19.ID : Int'
|       2: Path s19.PLACEMENT : String'
|       3: Path s19.BIDDER : String'
|       4: Path s19.TIMEVAL : java.time.LocalDateTime'
|   where: Apply Function = : Boolean
|     0: Path s19.ID : Int'
|     1: LiteralNode 8 (volatileHint=false) : Int'

2019-10-06 11:59:23,684 [DEBUG] from slick.relational.ResultConverterCompiler in application-akka.actor.default-dispatcher-4 - Compiled ResultConverter
| TypeMappingResultConverter
|   child: ProductResultConverter
|     1: OptionResultConverter$mcI$sp idx=1 : Int'
|     2: SpecializedJdbcResultConverter$$anon$1 idx=2, name=<computed> : String'
|     3: SpecializedJdbcResultConverter$$anon$1 idx=3, name=<computed> : String'
|     4: SpecializedJdbcResultConverter$$anon$2 idx=4 : java.time.LocalDateTime'

2019-10-06 11:59:23,684 [DEBUG] from slick.compiler.CodeGen in application-akka.actor.default-dispatcher-4 - Compiled server-side to:
| CompiledStatement "select "ID", "PLACEMENT", "BIDDER", "TIMEVAL" from "IMPRESSION" where "ID" = 8" : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]

2019-10-06 11:59:23,685 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-4 - After phase codeGen:
| ResultSetMapping : Vector[Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]]
|   from s13: CompiledStatement "select "ID", "PLACEMENT", "BIDDER", "TIMEVAL" from "IMPRESSION" where "ID" = 8" : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|   map: CompiledMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     converter: TypeMappingResultConverter
|       child: ProductResultConverter
|         1: OptionResultConverter$mcI$sp idx=1 : Int'
|         2: SpecializedJdbcResultConverter$$anon$1 idx=2, name=<computed> : String'
|         3: SpecializedJdbcResultConverter$$anon$1 idx=3, name=<computed> : String'
|         4: SpecializedJdbcResultConverter$$anon$2 idx=4 : java.time.LocalDateTime'

2019-10-06 11:59:23,685 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 - ------------------- Phase: Time ---------
2019-10-06 11:59:23,685 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -       assignUniqueSymbols:    2,965627 ms
2019-10-06 11:59:23,685 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -           unrollTailBinds:    0,881790 ms
2019-10-06 11:59:23,685 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -                inferTypes:    1,952828 ms
2019-10-06 11:59:23,685 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -              expandTables:   12,071756 ms
2019-10-06 11:59:23,685 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -           forceOuterBinds:    3,933462 ms
2019-10-06 11:59:23,685 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -         removeMappedTypes:    3,114105 ms
2019-10-06 11:59:23,685 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -                expandSums:    5,828479 ms
2019-10-06 11:59:23,686 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -         emulateOuterJoins:    1,192366 ms
2019-10-06 11:59:23,686 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -             expandRecords:    3,330088 ms
2019-10-06 11:59:23,686 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -        flattenProjections:   18,510821 ms
2019-10-06 11:59:23,686 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -              rewriteJoins:    0,991208 ms
2019-10-06 11:59:23,686 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -             verifySymbols:    2,468991 ms
2019-10-06 11:59:23,686 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -             relabelUnions:    1,539004 ms
2019-10-06 11:59:23,686 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -          createAggregates:    0,615968 ms
2019-10-06 11:59:23,686 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -           resolveZipJoins:    0,719140 ms
2019-10-06 11:59:23,686 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -          pruneProjections:    3,203045 ms
2019-10-06 11:59:23,687 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -           rewriteDistinct:    0,902273 ms
2019-10-06 11:59:23,687 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -    createResultSetMapping:    4,854678 ms
2019-10-06 11:59:23,687 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -            hoistClientOps:   10,709843 ms
2019-10-06 11:59:23,687 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -         reorderOperations:    1,993125 ms
2019-10-06 11:59:23,687 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -     mergeToComprehensions:   31,117119 ms
2019-10-06 11:59:23,687 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -            optimizeScalar:    1,803524 ms
2019-10-06 11:59:23,687 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -          removeFieldNames:   10,274612 ms
2019-10-06 11:59:23,687 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -                   codeGen:   17,244809 ms
2019-10-06 11:59:23,687 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-4 -                     TOTAL:  142,218661 ms
2019-10-06 11:59:23,693 [DEBUG] from slick.basic.BasicBackend.action in application-akka.actor.default-dispatcher-4 - #1: StreamingInvokerAction$HeadOptionAction [select "ID", "PLACEMENT", "BIDDER", "TIMEVAL" from "IMPRESSION" where "ID" = 8]
2019-10-06 11:59:23,697 [DEBUG] from slick.jdbc.JdbcBackend.statement in db-1 - Preparing statement: select "ID", "PLACEMENT", "BIDDER", "TIMEVAL" from "IMPRESSION" where "ID" = 8
2019-10-06 11:59:23,698 [DEBUG] from slick.jdbc.JdbcBackend.statement in db-1 - Executing prepared statement: HikariProxyPreparedStatement@1494334410 wrapping prep3: select "ID", "PLACEMENT", "BIDDER", "TIMEVAL" from "IMPRESSION" where "ID" = 8
2019-10-06 11:59:23,698 [DEBUG] from slick.jdbc.JdbcBackend.statementAndParameter in db-1 - Executing prepared statement: HikariProxyPreparedStatement@1494334410 wrapping prep3: select "ID", "PLACEMENT", "BIDDER", "TIMEVAL" from "IMPRESSION" where "ID" = 8
2019-10-06 11:59:23,698 [DEBUG] from slick.jdbc.JdbcBackend.benchmark in db-1 - Execution of prepared statement took 209µs
2019-10-06 11:59:23,708 [DEBUG] from slick.jdbc.StatementInvoker.result in db-1 - /----+-----------+----------+---------\
2019-10-06 11:59:23,708 [DEBUG] from slick.jdbc.StatementInvoker.result in db-1 - | 1  | 2         | 3        | 4       |
2019-10-06 11:59:23,708 [DEBUG] from slick.jdbc.StatementInvoker.result in db-1 - | ID | PLACEMENT | BIDDER   | TIMEVAL |
2019-10-06 11:59:23,708 [DEBUG] from slick.jdbc.StatementInvoker.result in db-1 - |----+-----------+----------+---------|
2019-10-06 11:59:23,708 [DEBUG] from slick.jdbc.StatementInvoker.result in db-1 - | 8  | ABC123    | appnexus | NULL    |
2019-10-06 11:59:23,708 [DEBUG] from slick.jdbc.StatementInvoker.result in db-1 - \----+-----------+----------+---------/
2019-10-06 11:59:23,718 [WARN] from akka.actor.ActorSystemImpl in play-dev-mode-akka.actor.default-dispatcher-8 - Explicitly set HTTP header 'Content-Type: application/json' is ignored, explicit `Content-Type` header is not allowed. Set `HttpResponse.entity.contentType` instead.
2019-10-06 11:59:53,594 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:00:02,809 [DEBUG] from akka.io.TcpListener in play-dev-mode-akka.actor.default-dispatcher-9 - New connection accepted
2019-10-06 12:00:02,815 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - Source:
| Filter s2
|   from s2: TableExpansion
|     table s3: Table IMPRESSION
|     columns: TypeMapping
|       0: ProductNode
|         1: OptionApply
|           0: Path s3.ID : Int'
|         2: Path s3.PLACEMENT : String'
|         3: Path s3.BIDDER : String'
|         4: OptionApply
|           0: Path s3.TIMEVAL : java.time.LocalDateTime'
|   where: Apply Function =
|     0: Path s2.ID : Int'
|     1: LiteralNode 7 (volatileHint=false)

2019-10-06 12:00:02,815 [DEBUG] from slick.compiler.AssignUniqueSymbols in application-akka.actor.default-dispatcher-3 - Detected features: UsedFeatures(false,true,false,true)
2019-10-06 12:00:02,815 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase assignUniqueSymbols:
| Filter s4
|   from s4: TableExpansion
|     table s5: Table IMPRESSION
|     columns: TypeMapping
|       0: ProductNode
|         1: OptionApply
|           0: Path s5.ID : Int'
|         2: Path s5.PLACEMENT : String'
|         3: Path s5.BIDDER : String'
|         4: OptionApply
|           0: Path s5.TIMEVAL : java.time.LocalDateTime'
|   where: Apply Function =
|     0: Path s4.ID : Int'
|     1: LiteralNode 7 (volatileHint=false)

2019-10-06 12:00:02,816 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase unrollTailBinds: (no change)
2019-10-06 12:00:02,816 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase inferTypes: (no change)
2019-10-06 12:00:02,816 [DEBUG] from slick.compiler.ExpandTables in application-akka.actor.default-dispatcher-3 - Found Selects for NominalTypes: @(slick.jdbc.H2Profile$._.IMPRESSION)
2019-10-06 12:00:02,816 [DEBUG] from slick.compiler.ExpandTables in application-akka.actor.default-dispatcher-3 - With correct table types:
| Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   where: Apply Function = : Boolean
|     0: Path s4.ID : Int'
|     1: LiteralNode 7 (volatileHint=false) : Int'

2019-10-06 12:00:02,816 [DEBUG] from slick.compiler.ExpandTables in application-akka.actor.default-dispatcher-3 - Table expansions: @t6 -> (s5,TypeMapping)
2019-10-06 12:00:02,817 [DEBUG] from slick.compiler.ExpandTables in application-akka.actor.default-dispatcher-3 - Expanding tables in result type
2019-10-06 12:00:02,818 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase expandTables:
| Bind : Vector[t8<Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]>]
|   from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     where: Apply Function = : Boolean
|       0: Path s4.ID : Int'
|       1: LiteralNode 7 (volatileHint=false) : Int'
|   select: Pure t8 : Vector[t8<Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]>]
|     value: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|       0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|         1: OptionApply : Option[Int']
|           0: Path s7.ID : Int'
|         2: Path s7.PLACEMENT : String'
|         3: Path s7.BIDDER : String'
|         4: OptionApply : Option[java.time.LocalDateTime']
|           0: Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 12:00:02,819 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase forceOuterBinds:
| Bind : Vector[t8<Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]>]
|   from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     where: Apply Function = : Boolean
|       0: Path s4.ID : Int'
|       1: LiteralNode 7 (volatileHint=false) : Int'
|   select: Pure t8 : Vector[t8<Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]>]
|     value: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|       0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|         1: OptionApply : Option[Int']
|           0: Path s7.ID : Int'
|         2: Path s7.PLACEMENT : String'
|         3: Path s7.BIDDER : String'
|         4: OptionApply : Option[java.time.LocalDateTime']
|           0: Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase removeMappedTypes:
| Bind : Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>]
|   from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     where: Apply Function = : Boolean
|       0: Path s4.ID : Int'
|       1: LiteralNode 7 (volatileHint=false) : Int'
|   select: Pure t8 : Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>]
|     value: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s7.ID : Int'
|       2: Path s7.PLACEMENT : String'
|       3: Path s7.BIDDER : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>] -> Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}> -> @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>
2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: Int' -> Int'
2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: Int' -> Int'
2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: Boolean -> Boolean
2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>] -> Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}> -> @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>
2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: Int' -> Int'
2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: Option[Int'] -> Option[Int']
2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}> -> @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>
2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: String' -> String'
2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}> -> @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>
2019-10-06 12:00:02,820 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: String' -> String'
2019-10-06 12:00:02,821 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}> -> @t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>
2019-10-06 12:00:02,821 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: java.time.LocalDateTime' -> java.time.LocalDateTime'
2019-10-06 12:00:02,821 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: Option[java.time.LocalDateTime'] -> Option[java.time.LocalDateTime']
2019-10-06 12:00:02,821 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: (Option[Int'], String', String', Option[java.time.LocalDateTime']) -> (Option[Int'], String', String', Option[java.time.LocalDateTime'])
2019-10-06 12:00:02,821 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>] -> Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>]
2019-10-06 12:00:02,821 [DEBUG] from slick.compiler.ExpandSums in application-akka.actor.default-dispatcher-3 - Translated type: Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>] -> Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>]
2019-10-06 12:00:02,821 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase expandSums: (no change)
2019-10-06 12:00:02,821 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase emulateOuterJoins: (no change)
2019-10-06 12:00:02,822 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase expandRecords:
| Bind : Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>]
|   from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     where: Apply Function = : Boolean
|       0: Path s4.ID : Int'
|       1: LiteralNode 7 (volatileHint=false) : Int'
|   select: Pure t8 : Vector[t8<(Option[Int'], String', String', Option[java.time.LocalDateTime'])>]
|     value: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s7.ID : Int'
|       2: Path s7.PLACEMENT : String'
|       3: Path s7.BIDDER : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 12:00:02,822 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Analyzing s4.ID with symbols 
| Path s4.ID : Int'

2019-10-06 12:00:02,822 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Translated s4.ID to:
| Path s4.ID

2019-10-06 12:00:02,822 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Flattening projection t8
2019-10-06 12:00:02,822 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Analyzing s7.ID with symbols 
| Path s7.ID : Int'

2019-10-06 12:00:02,822 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Translated s7.ID to:
| Path s7.ID

2019-10-06 12:00:02,822 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Analyzing s7.PLACEMENT with symbols 
| Path s7.PLACEMENT : String'

2019-10-06 12:00:02,823 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Translated s7.PLACEMENT to:
| Path s7.PLACEMENT

2019-10-06 12:00:02,823 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Analyzing s7.BIDDER with symbols 
| Path s7.BIDDER : String'

2019-10-06 12:00:02,823 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Translated s7.BIDDER to:
| Path s7.BIDDER

2019-10-06 12:00:02,823 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Analyzing s7.TIMEVAL with symbols 
| Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 12:00:02,823 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Translated s7.TIMEVAL to:
| Path s7.TIMEVAL

2019-10-06 12:00:02,823 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Flattening node at Path 
| ProductNode
|   1: OptionApply
|     0: Path s7.ID
|   2: Path s7.PLACEMENT
|   3: Path s7.BIDDER
|   4: OptionApply
|     0: Path s7.TIMEVAL

2019-10-06 12:00:02,823 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Flattening node at Path _1
| OptionApply
|   0: Path s7.ID

2019-10-06 12:00:02,823 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Adding definition: s9 -> OptionApply
2019-10-06 12:00:02,823 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Flattening node at Path _2
| Path s7.PLACEMENT

2019-10-06 12:00:02,823 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Adding definition: s10 -> Path s7.PLACEMENT
2019-10-06 12:00:02,823 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Flattening node at Path _3
| Path s7.BIDDER

2019-10-06 12:00:02,824 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Adding definition: s11 -> Path s7.BIDDER
2019-10-06 12:00:02,824 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Flattening node at Path _4
| OptionApply
|   0: Path s7.TIMEVAL

2019-10-06 12:00:02,824 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Adding definition: s12 -> OptionApply
2019-10-06 12:00:02,824 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Adding translation for t8: (Map(List(_2) -> s10, List(_1) -> s9, List(_3) -> s11, List(_4) -> s12), UnassignedType)
2019-10-06 12:00:02,824 [DEBUG] from slick.compiler.FlattenProjections in application-akka.actor.default-dispatcher-3 - Flattened projection to
| Pure t8
|   value: StructNode
|     s9: OptionApply
|       0: Path s7.ID
|     s10: Path s7.PLACEMENT
|     s11: Path s7.BIDDER
|     s12: OptionApply
|       0: Path s7.TIMEVAL

2019-10-06 12:00:02,825 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase flattenProjections:
| Bind : Vector[t8<{s9: Option[Int'], s10: String', s11: String', s12: Option[java.time.LocalDateTime']}>]
|   from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     where: Apply Function = : Boolean
|       0: Path s4.ID : Int'
|       1: LiteralNode 7 (volatileHint=false) : Int'
|   select: Pure t8 : Vector[t8<{s9: Option[Int'], s10: String', s11: String', s12: Option[java.time.LocalDateTime']}>]
|     value: StructNode : {s9: Option[Int'], s10: String', s11: String', s12: Option[java.time.LocalDateTime']}
|       s9: OptionApply : Option[Int']
|         0: Path s7.ID : Int'
|       s10: Path s7.PLACEMENT : String'
|       s11: Path s7.BIDDER : String'
|       s12: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 12:00:02,825 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase rewriteJoins: (no change)
2019-10-06 12:00:02,825 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase verifySymbols: (no change)
2019-10-06 12:00:02,825 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase relabelUnions: (no change)
2019-10-06 12:00:02,825 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase createAggregates: (no change)
2019-10-06 12:00:02,825 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase resolveZipJoins: (no change)
2019-10-06 12:00:02,826 [DEBUG] from slick.compiler.PruneProjections in application-akka.actor.default-dispatcher-3 - Unreferenced: t8; Field refs: (@t6,TIMEVAL), (@t6,PLACEMENT), (@t6,ID), (@t6,BIDDER)
2019-10-06 12:00:02,826 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase pruneProjections: (no change)
2019-10-06 12:00:02,826 [DEBUG] from slick.compiler.RewriteDistinct in application-akka.actor.default-dispatcher-3 - No DISTINCT used as determined by assignUniqueSymbols - skipping phase
2019-10-06 12:00:02,826 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase rewriteDistinct: (no change)
2019-10-06 12:00:02,826 [DEBUG] from slick.compiler.CreateResultSetMapping in application-akka.actor.default-dispatcher-3 - Creating mapping from t8<Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]>
2019-10-06 12:00:02,826 [DEBUG] from slick.compiler.CreateResultSetMapping in application-akka.actor.default-dispatcher-3 - Creating mapping from (Option[Int'], String', String', Option[java.time.LocalDateTime'])
2019-10-06 12:00:02,826 [DEBUG] from slick.compiler.CreateResultSetMapping in application-akka.actor.default-dispatcher-3 - Creating mapping from Option[Int']
2019-10-06 12:00:02,826 [DEBUG] from slick.compiler.CreateResultSetMapping in application-akka.actor.default-dispatcher-3 - Creating mapping from String'
2019-10-06 12:00:02,826 [DEBUG] from slick.compiler.CreateResultSetMapping in application-akka.actor.default-dispatcher-3 - Creating mapping from String'
2019-10-06 12:00:02,826 [DEBUG] from slick.compiler.CreateResultSetMapping in application-akka.actor.default-dispatcher-3 - Creating mapping from Option[java.time.LocalDateTime']
2019-10-06 12:00:02,827 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase createResultSetMapping:
| ResultSetMapping : Vector[Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]]
|   from s13: Bind : Vector[t8<{s9: Option[Int'], s10: String', s11: String', s12: Option[java.time.LocalDateTime']}>]
|     from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|       from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|       where: Apply Function = : Boolean
|         0: Path s4.ID : Int'
|         1: LiteralNode 7 (volatileHint=false) : Int'
|     select: Pure t8 : Vector[t8<{s9: Option[Int'], s10: String', s11: String', s12: Option[java.time.LocalDateTime']}>]
|       value: StructNode : {s9: Option[Int'], s10: String', s11: String', s12: Option[java.time.LocalDateTime']}
|         s9: OptionApply : Option[Int']
|           0: Path s7.ID : Int'
|         s10: Path s7.PLACEMENT : String'
|         s11: Path s7.BIDDER : String'
|         s12: OptionApply : Option[java.time.LocalDateTime']
|           0: Path s7.TIMEVAL : java.time.LocalDateTime'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: Path s13.s9 : Option[Int']
|       2: Path s13.s10 : String'
|       3: Path s13.s11 : String'
|       4: Path s13.s12 : Option[java.time.LocalDateTime']

2019-10-06 12:00:02,827 [DEBUG] from slick.compiler.HoistClientOps in application-akka.actor.default-dispatcher-3 - Hoisting operations from defs: s9, s12
2019-10-06 12:00:02,827 [DEBUG] from slick.compiler.HoistClientOps in application-akka.actor.default-dispatcher-3 - New defs: Map(0 -> (Path s7.ID,s14), 1 -> (Path s7.PLACEMENT,s15), 2 -> (Path s7.BIDDER,s16), 3 -> (Path s7.TIMEVAL,s17))
2019-10-06 12:00:02,829 [DEBUG] from slick.compiler.HoistClientOps in application-akka.actor.default-dispatcher-3 - New ResultSetMapping:
| ResultSetMapping : Vector[Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]]
|   from s13: Bind : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|     from s7: ...
|     select: Pure t18 : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|       value: StructNode : {s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}
|         s14: Path s7.ID : Int'
|         s15: Path s7.PLACEMENT : String'
|         s16: Path s7.BIDDER : String'
|         s17: Path s7.TIMEVAL : java.time.LocalDateTime'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s13.s14 : Int'
|       2: Path s13.s15 : String'
|       3: Path s13.s16 : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s13.s17 : java.time.LocalDateTime'

2019-10-06 12:00:02,830 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase hoistClientOps:
| ResultSetMapping : Vector[Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]]
|   from s13: Bind : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|     from s7: Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|       from s4: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|       where: Apply Function = : Boolean
|         0: Path s4.ID : Int'
|         1: LiteralNode 7 (volatileHint=false) : Int'
|     select: Pure t18 : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|       value: StructNode : {s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}
|         s14: Path s7.ID : Int'
|         s15: Path s7.PLACEMENT : String'
|         s16: Path s7.BIDDER : String'
|         s17: Path s7.TIMEVAL : java.time.LocalDateTime'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s13.s14 : Int'
|       2: Path s13.s15 : String'
|       3: Path s13.s16 : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s13.s17 : java.time.LocalDateTime'

2019-10-06 12:00:02,830 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase reorderOperations: (no change)
2019-10-06 12:00:02,831 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-3 - Table fields: Map(@t6 -> Vector(ID, PLACEMENT, BIDDER, TIMEVAL))
2019-10-06 12:00:02,831 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-3 - Creating source from TableNode:
| Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]

2019-10-06 12:00:02,831 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-3 - Mappings are: ConstArray(((@t6,ID),List(ID)), ((@t6,PLACEMENT),List(PLACEMENT)), ((@t6,BIDDER),List(BIDDER)), ((@t6,TIMEVAL),List(TIMEVAL)))
2019-10-06 12:00:02,831 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-3 - Building new Comprehension from:
| Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]

2019-10-06 12:00:02,832 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-3 - Built new Comprehension:
| Comprehension s19, None, None, ConstArray(), None, None, None, None, false : Vector[t20<{s21: Int', s22: String', s23: String', s24: java.time.LocalDateTime'}>]
|   from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   select: Pure t20 : Vector[t20<{s21: Int', s22: String', s23: String', s24: java.time.LocalDateTime'}>]
|     value: StructNode : {s21: Int', s22: String', s23: String', s24: java.time.LocalDateTime'}
|       s21: Path s19.ID : Int'
|       s22: Path s19.PLACEMENT : String'
|       s23: Path s19.BIDDER : String'
|       s24: Path s19.TIMEVAL : java.time.LocalDateTime'

2019-10-06 12:00:02,832 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-3 - Replacements are: Map((@t6,ID) -> s21, (@t6,PLACEMENT) -> s22, (@t6,BIDDER) -> s23, (@t6,TIMEVAL) -> s24)
2019-10-06 12:00:02,832 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-3 - Merging Filter into Comprehension:
| Filter s4 : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   from s4: ...
|   where: Apply Function = : Boolean
|     0: Path s4.ID : Int'
|     1: LiteralNode 7 (volatileHint=false) : Int'

2019-10-06 12:00:02,833 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-3 - Merged Filter into Comprehension:
| Comprehension s19, Some(Apply Function =), None, ConstArray(), None, None, None, None, false : Vector[t20<{s21: Int', s22: String', s23: String', s24: java.time.LocalDateTime'}>]
|   from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   select: Pure t20 : Vector[t20<{s21: Int', s22: String', s23: String', s24: java.time.LocalDateTime'}>]
|     value: StructNode : {s21: Int', s22: String', s23: String', s24: java.time.LocalDateTime'}
|       s21: Path s19.ID : Int'
|       s22: Path s19.PLACEMENT : String'
|       s23: Path s19.BIDDER : String'
|       s24: Path s19.TIMEVAL : java.time.LocalDateTime'
|   where: Apply Function = : Boolean
|     0: Path s19.ID : Int'
|     1: LiteralNode 7 (volatileHint=false) : Int'

2019-10-06 12:00:02,834 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-3 - Merging Bind into Comprehension as 'select':
| Bind : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|   from s7: ...
|   select: Pure t18 : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|     value: StructNode : {s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}
|       s14: Path s7.ID : Int'
|       s15: Path s7.PLACEMENT : String'
|       s16: Path s7.BIDDER : String'
|       s17: Path s7.TIMEVAL : java.time.LocalDateTime'

2019-10-06 12:00:02,835 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-3 - Merged Bind into Comprehension as 'select':
| Comprehension s19, Some(Apply Function =), None, ConstArray(), None, None, None, None, false : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|   from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   select: Pure t18 : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|     value: StructNode : {s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}
|       s14: Path s19.ID : Int'
|       s15: Path s19.PLACEMENT : String'
|       s16: Path s19.BIDDER : String'
|       s17: Path s19.TIMEVAL : java.time.LocalDateTime'
|   where: Apply Function = : Boolean
|     0: Path s19.ID : Int'
|     1: LiteralNode 7 (volatileHint=false) : Int'

2019-10-06 12:00:02,836 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-3 - Replacements are: Map((t18,s14) -> s14, (t18,s15) -> s15, (t18,s16) -> s16, (t18,s17) -> s17)
2019-10-06 12:00:02,836 [DEBUG] from slick.compiler.MergeToComprehensions in application-akka.actor.default-dispatcher-3 - Mappings are: ConstArray(((t18,s14),List(s14)), ((t18,s15),List(s15)), ((t18,s16),List(s16)), ((t18,s17),List(s17)))
2019-10-06 12:00:02,837 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase mergeToComprehensions:
| ResultSetMapping : Vector[Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]]
|   from s13: Comprehension s19, Some(Apply Function =), None, ConstArray(), None, None, None, None, false : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|     from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     select: Pure t18 : Vector[t18<{s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}>]
|       value: StructNode : {s14: Int', s15: String', s16: String', s17: java.time.LocalDateTime'}
|         s14: Path s19.ID : Int'
|         s15: Path s19.PLACEMENT : String'
|         s16: Path s19.BIDDER : String'
|         s17: Path s19.TIMEVAL : java.time.LocalDateTime'
|     where: Apply Function = : Boolean
|       0: Path s19.ID : Int'
|       1: LiteralNode 7 (volatileHint=false) : Int'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s13.s14 : Int'
|       2: Path s13.s15 : String'
|       3: Path s13.s16 : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s13.s17 : java.time.LocalDateTime'

2019-10-06 12:00:02,838 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase optimizeScalar: (no change)
2019-10-06 12:00:02,838 [DEBUG] from slick.compiler.RemoveFieldNames in application-akka.actor.default-dispatcher-3 - Required symbols: s14 -> 0, s15 -> 1, s16 -> 2, s17 -> 3
2019-10-06 12:00:02,840 [DEBUG] from slick.compiler.RemoveFieldNames in application-akka.actor.default-dispatcher-3 - Transformed RSM: 
| ResultSetMapping
|   from s13: Comprehension s19, Some(Apply Function =), None, ConstArray(), None, None, None, None, false : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|     from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     select: Pure t18 : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|       value: ProductNode : (Int', String', String', java.time.LocalDateTime')
|         1: Path s19.ID : Int'
|         2: Path s19.PLACEMENT : String'
|         3: Path s19.BIDDER : String'
|         4: Path s19.TIMEVAL : java.time.LocalDateTime'
|     where: Apply Function = : Boolean
|       0: Path s19.ID : Int'
|       1: LiteralNode 7 (volatileHint=false) : Int'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s13.s14 : Int'
|       2: Path s13.s15 : String'
|       3: Path s13.s16 : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s13.s17 : java.time.LocalDateTime'

2019-10-06 12:00:02,841 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase removeFieldNames:
| ResultSetMapping : Vector[Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]]
|   from s13: Comprehension s19, Some(Apply Function =), None, ConstArray(), None, None, None, None, false : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|     from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|     select: Pure t18 : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|       value: ProductNode : (Int', String', String', java.time.LocalDateTime')
|         1: Path s19.ID : Int'
|         2: Path s19.PLACEMENT : String'
|         3: Path s19.BIDDER : String'
|         4: Path s19.TIMEVAL : java.time.LocalDateTime'
|     where: Apply Function = : Boolean
|       0: Path s19.ID : Int'
|       1: LiteralNode 7 (volatileHint=false) : Int'
|   map: TypeMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     0: ProductNode : (Option[Int'], String', String', Option[java.time.LocalDateTime'])
|       1: OptionApply : Option[Int']
|         0: Path s13._1 : Int'
|       2: Path s13._2 : String'
|       3: Path s13._3 : String'
|       4: OptionApply : Option[java.time.LocalDateTime']
|         0: Path s13._4 : java.time.LocalDateTime'

2019-10-06 12:00:02,842 [DEBUG] from slick.compiler.CodeGen in application-akka.actor.default-dispatcher-3 - Compiling server-side and mapping with server-side:
| Comprehension s19, Some(Apply Function =), None, ConstArray(), None, None, None, None, false : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|   from s19: Table IMPRESSION : Vector[@t6<{ID: Int', PLACEMENT: String', BIDDER: String', TIMEVAL: java.time.LocalDateTime'}>]
|   select: Pure t18 : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|     value: ProductNode : (Int', String', String', java.time.LocalDateTime')
|       1: Path s19.ID : Int'
|       2: Path s19.PLACEMENT : String'
|       3: Path s19.BIDDER : String'
|       4: Path s19.TIMEVAL : java.time.LocalDateTime'
|   where: Apply Function = : Boolean
|     0: Path s19.ID : Int'
|     1: LiteralNode 7 (volatileHint=false) : Int'

2019-10-06 12:00:02,843 [DEBUG] from slick.relational.ResultConverterCompiler in application-akka.actor.default-dispatcher-3 - Compiled ResultConverter
| TypeMappingResultConverter
|   child: ProductResultConverter
|     1: OptionResultConverter$mcI$sp idx=1 : Int'
|     2: SpecializedJdbcResultConverter$$anon$1 idx=2, name=<computed> : String'
|     3: SpecializedJdbcResultConverter$$anon$1 idx=3, name=<computed> : String'
|     4: SpecializedJdbcResultConverter$$anon$2 idx=4 : java.time.LocalDateTime'

2019-10-06 12:00:02,843 [DEBUG] from slick.compiler.CodeGen in application-akka.actor.default-dispatcher-3 - Compiled server-side to:
| CompiledStatement "select "ID", "PLACEMENT", "BIDDER", "TIMEVAL" from "IMPRESSION" where "ID" = 7" : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]

2019-10-06 12:00:02,844 [DEBUG] from slick.compiler.QueryCompiler in application-akka.actor.default-dispatcher-3 - After phase codeGen:
| ResultSetMapping : Vector[Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]]
|   from s13: CompiledStatement "select "ID", "PLACEMENT", "BIDDER", "TIMEVAL" from "IMPRESSION" where "ID" = 7" : Vector[t18<(Int', String', String', java.time.LocalDateTime')>]
|   map: CompiledMapping : Mapped[(Option[Int'], String', String', Option[java.time.LocalDateTime'])]
|     converter: TypeMappingResultConverter
|       child: ProductResultConverter
|         1: OptionResultConverter$mcI$sp idx=1 : Int'
|         2: SpecializedJdbcResultConverter$$anon$1 idx=2, name=<computed> : String'
|         3: SpecializedJdbcResultConverter$$anon$1 idx=3, name=<computed> : String'
|         4: SpecializedJdbcResultConverter$$anon$2 idx=4 : java.time.LocalDateTime'

2019-10-06 12:00:02,844 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 - ------------------- Phase: Time ---------
2019-10-06 12:00:02,844 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -       assignUniqueSymbols:    0,904325 ms
2019-10-06 12:00:02,844 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -           unrollTailBinds:    0,046177 ms
2019-10-06 12:00:02,844 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -                inferTypes:    0,090463 ms
2019-10-06 12:00:02,845 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -              expandTables:    2,140870 ms
2019-10-06 12:00:02,845 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -           forceOuterBinds:    1,042008 ms
2019-10-06 12:00:02,845 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -         removeMappedTypes:    0,874103 ms
2019-10-06 12:00:02,845 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -                expandSums:    1,181714 ms
2019-10-06 12:00:02,845 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -         emulateOuterJoins:    0,062626 ms
2019-10-06 12:00:02,845 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -             expandRecords:    1,023554 ms
2019-10-06 12:00:02,845 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -        flattenProjections:    3,235897 ms
2019-10-06 12:00:02,845 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -              rewriteJoins:    0,050353 ms
2019-10-06 12:00:02,845 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -             verifySymbols:    0,052650 ms
2019-10-06 12:00:02,845 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -             relabelUnions:    0,054304 ms
2019-10-06 12:00:02,845 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -          createAggregates:    0,011175 ms
2019-10-06 12:00:02,846 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -           resolveZipJoins:    0,064923 ms
2019-10-06 12:00:02,846 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -          pruneProjections:    0,264505 ms
2019-10-06 12:00:02,846 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -           rewriteDistinct:    0,021527 ms
2019-10-06 12:00:02,846 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -    createResultSetMapping:    1,389385 ms
2019-10-06 12:00:02,846 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -            hoistClientOps:    2,933821 ms
2019-10-06 12:00:02,846 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -         reorderOperations:    0,228982 ms
2019-10-06 12:00:02,846 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -     mergeToComprehensions:    7,182512 ms
2019-10-06 12:00:02,846 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -            optimizeScalar:    0,157493 ms
2019-10-06 12:00:02,846 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -          removeFieldNames:    3,721004 ms
2019-10-06 12:00:02,846 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -                   codeGen:    2,552397 ms
2019-10-06 12:00:02,846 [DEBUG] from slick.compiler.QueryCompilerBenchmark in application-akka.actor.default-dispatcher-3 -                     TOTAL:   29,286768 ms
2019-10-06 12:00:02,847 [DEBUG] from slick.basic.BasicBackend.action in application-akka.actor.default-dispatcher-3 - #1: StreamingInvokerAction$HeadOptionAction [select "ID", "PLACEMENT", "BIDDER", "TIMEVAL" from "IMPRESSION" where "ID" = 7]
2019-10-06 12:00:02,847 [DEBUG] from slick.jdbc.JdbcBackend.statement in db-2 - Preparing statement: select "ID", "PLACEMENT", "BIDDER", "TIMEVAL" from "IMPRESSION" where "ID" = 7
2019-10-06 12:00:02,848 [DEBUG] from slick.jdbc.JdbcBackend.statement in db-2 - Executing prepared statement: HikariProxyPreparedStatement@1893104251 wrapping prep4: select "ID", "PLACEMENT", "BIDDER", "TIMEVAL" from "IMPRESSION" where "ID" = 7
2019-10-06 12:00:02,848 [DEBUG] from slick.jdbc.JdbcBackend.statementAndParameter in db-2 - Executing prepared statement: HikariProxyPreparedStatement@1893104251 wrapping prep4: select "ID", "PLACEMENT", "BIDDER", "TIMEVAL" from "IMPRESSION" where "ID" = 7
2019-10-06 12:00:02,848 [DEBUG] from slick.jdbc.JdbcBackend.benchmark in db-2 - Execution of prepared statement took 175µs
2019-10-06 12:00:02,849 [DEBUG] from slick.jdbc.StatementInvoker.result in db-2 - /----+-----------+---------+----------------------\
2019-10-06 12:00:02,849 [DEBUG] from slick.jdbc.StatementInvoker.result in db-2 - | 1  | 2         | 3       | 4                    |
2019-10-06 12:00:02,849 [DEBUG] from slick.jdbc.StatementInvoker.result in db-2 - | ID | PLACEMENT | BIDDER  | TIMEVAL              |
2019-10-06 12:00:02,849 [DEBUG] from slick.jdbc.StatementInvoker.result in db-2 - |----+-----------+---------+----------------------|
2019-10-06 12:00:02,849 [DEBUG] from slick.jdbc.StatementInvoker.result in db-2 - | 7  | ABC129    | Rubicon | 2019-09-15 18:00:... |
2019-10-06 12:00:02,849 [DEBUG] from slick.jdbc.StatementInvoker.result in db-2 - \----+-----------+---------+----------------------/
2019-10-06 12:00:02,853 [WARN] from akka.actor.ActorSystemImpl in play-dev-mode-akka.actor.default-dispatcher-2 - Explicitly set HTTP header 'Content-Type: application/json' is ignored, explicit `Content-Type` header is not allowed. Set `HttpResponse.entity.contentType` instead.
2019-10-06 12:00:23,597 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:00:53,601 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:01:23,606 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:01:53,608 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:02:23,614 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:02:53,615 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:03:23,620 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:03:53,623 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:04:23,628 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:04:53,631 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:05:23,633 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in db housekeeper - db - Pool stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:05:26,773 [DEBUG] from akka.actor.CoordinatedShutdown in play-dev-mode-akka.actor.default-dispatcher-2 - Starting coordinated shutdown from JVM shutdown hook
2019-10-06 12:05:26,775 [DEBUG] from akka.actor.CoordinatedShutdown in play-dev-mode-akka.actor.default-dispatcher-2 - Performing phase [before-service-unbind] with [1] tasks: [trace-server-stop-request]
2019-10-06 12:05:26,775 [INFO] from play.core.server.AkkaHttpServer in play-dev-mode-shutdown-hook-1 - Stopping server...
2019-10-06 12:05:26,776 [DEBUG] from akka.actor.CoordinatedShutdown in play-dev-mode-akka.actor.default-dispatcher-12 - Performing phase [service-unbind] with [1] tasks: [akka-http-server-unbind]
2019-10-06 12:05:26,779 [DEBUG] from akka.io.TcpListener in play-dev-mode-akka.actor.default-dispatcher-13 - Unbinding endpoint /0:0:0:0:0:0:0:0:9000
2019-10-06 12:05:26,780 [DEBUG] from akka.io.TcpListener in play-dev-mode-akka.actor.default-dispatcher-13 - Unbound endpoint /0:0:0:0:0:0:0:0:9000, stopping listener
2019-10-06 12:05:26,781 [DEBUG] from akka.actor.CoordinatedShutdown in play-dev-mode-akka.actor.default-dispatcher-15 - Performing phase [service-requests-done] with [0] tasks
2019-10-06 12:05:26,781 [DEBUG] from akka.actor.CoordinatedShutdown in play-dev-mode-akka.actor.default-dispatcher-15 - Performing phase [service-stop] with [1] tasks: [shutdown-application-dev-mode]
2019-10-06 12:05:26,782 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-3 - Performing phase [before-service-unbind] with [0] tasks
2019-10-06 12:05:26,782 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-5 - Performing phase [service-unbind] with [0] tasks
2019-10-06 12:05:26,782 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-6 - Performing phase [service-requests-done] with [0] tasks
2019-10-06 12:05:26,782 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-6 - Performing phase [service-stop] with [1] tasks: [application-lifecycle-stophook]
2019-10-06 12:05:26,782 [INFO] from com.zaxxer.hikari.HikariDataSource in application-akka.actor.default-dispatcher-3 - db - Shutdown initiated...
2019-10-06 12:05:26,783 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in application-akka.actor.default-dispatcher-3 - db - Before shutdown stats (total=20, active=0, idle=20, waiting=0)
2019-10-06 12:05:26,783 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn20: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,783 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn21: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,783 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn22: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,783 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn23: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,783 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn24: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,784 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn25: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,784 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn26: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,784 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn27: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,784 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn28: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,785 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn29: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,785 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn30: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,785 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn31: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,785 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn32: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,786 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn33: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,786 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn34: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,786 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn35: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,786 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn36: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,786 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn37: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,787 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn38: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,787 [DEBUG] from com.zaxxer.hikari.pool.PoolBase in db connection closer - db - Closing connection conn39: url=jdbc:h2:mem:play user=: (connection evicted)
2019-10-06 12:05:26,787 [DEBUG] from com.zaxxer.hikari.pool.HikariPool in application-akka.actor.default-dispatcher-3 - db - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2019-10-06 12:05:26,787 [INFO] from com.zaxxer.hikari.HikariDataSource in application-akka.actor.default-dispatcher-3 - db - Shutdown completed.
2019-10-06 12:05:26,787 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-6 - Performing phase [before-cluster-shutdown] with [0] tasks
2019-10-06 12:05:26,788 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-6 - Performing phase [cluster-sharding-shutdown-region] with [0] tasks
2019-10-06 12:05:26,788 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-6 - Performing phase [cluster-leave] with [0] tasks
2019-10-06 12:05:26,788 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-6 - Performing phase [cluster-exiting] with [0] tasks
2019-10-06 12:05:26,788 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-6 - Performing phase [cluster-exiting-done] with [0] tasks
2019-10-06 12:05:26,788 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-6 - Performing phase [cluster-shutdown] with [0] tasks
2019-10-06 12:05:26,788 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-6 - Performing phase [before-actor-system-terminate] with [1] tasks: [force-reload]
2019-10-06 12:05:26,788 [DEBUG] from akka.actor.CoordinatedShutdown in application-akka.actor.default-dispatcher-6 - Performing phase [actor-system-terminate] with [1] tasks: [terminate-system]
2019-10-06 12:05:26,788 [DEBUG] from akka.event.EventStream in application-akka.actor.default-dispatcher-6 - shutting down: StandardOutLogger
2019-10-06 12:05:26,800 [DEBUG] from akka.actor.CoordinatedShutdown in play-dev-mode-akka.actor.default-dispatcher-13 - Performing phase [before-cluster-shutdown] with [0] tasks
2019-10-06 12:05:26,800 [DEBUG] from akka.actor.CoordinatedShutdown in play-dev-mode-akka.actor.default-dispatcher-13 - Performing phase [cluster-sharding-shutdown-region] with [0] tasks
2019-10-06 12:05:26,800 [DEBUG] from akka.actor.CoordinatedShutdown in play-dev-mode-akka.actor.default-dispatcher-13 - Performing phase [cluster-leave] with [0] tasks
2019-10-06 12:05:26,800 [DEBUG] from akka.actor.CoordinatedShutdown in play-dev-mode-akka.actor.default-dispatcher-13 - Performing phase [cluster-exiting] with [0] tasks
2019-10-06 12:05:26,800 [DEBUG] from akka.actor.CoordinatedShutdown in play-dev-mode-akka.actor.default-dispatcher-13 - Performing phase [cluster-exiting-done] with [0] tasks
2019-10-06 12:05:26,800 [DEBUG] from akka.actor.CoordinatedShutdown in play-dev-mode-akka.actor.default-dispatcher-13 - Performing phase [cluster-shutdown] with [0] tasks
2019-10-06 12:05:26,800 [DEBUG] from akka.actor.CoordinatedShutdown in play-dev-mode-akka.actor.default-dispatcher-13 - Performing phase [before-actor-system-terminate] with [2] tasks: [user-provided-server-stop-hook, shutdown-logger]
